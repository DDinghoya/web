---
import { Trans } from "astro-i18next/components";
import { promises as fs } from 'fs';
import path from 'path';

let data;

async function fetchData() {
  const url = new URL(Astro.request.url);
  const countryCode = url.pathname.split('/')[1] || '';

  const filePath = path.join(process.cwd(), 'public', 'json', countryCode, 'services.json');
  
  try {
    const fileContents = await fs.readFile(filePath, 'utf8');
    const jsonData = JSON.parse(fileContents);
    return jsonData.services.service;
  } catch (error) {
    console.error(`Failed to read file at ${filePath}:`, error);
    return [];
  }
}

data = await fetchData();
const last = data[data.length - 1];
data = data.slice(0, -4);
data.push(last);
---

<div id="intro" class="svc-holder">
  <h1 class="title">
    <Trans i18nKey="services.title">
      Welcome to <b style="font-family:Rubik;">WiiLink</b>!
    </Trans>
  </h1>
  <h2 class="subtitle">
    <Trans i18nKey="services.subtitle">
      A community project for the Wii that works towards reviving and enhancing
      the discontinued WiiConnect24 channels and services, including the ones
      that were only available in Japan.
    </Trans>
  </h2>
  <div class="slider">
    <div class="slide-track">
      {data.slice(0, data.length / 2).map(service => (
        service && service.link && (
          <a class="service-link" href={service.link} aria-label={service.name + ' Link'}>
            <div class='service'>
              <div class='service-color' style={{backgroundColor: service.color}}></div>
              <div class='service-content'>
                {service.icon && <img alt={service.name + ' Icon'} loading='lazy' src={`/img/${service.icon}`} />}
                <h2>{service.name}</h2>
                <div class="horizontal-line"></div>
              </div>
              <h3 class='service-desc'>{service.desc}</h3>
              <div class='barhold' style={{backgroundColor: `${service.color}20`}}>
                <div class='bar' style={{width: `${service.completed}%`, backgroundColor: service.color}}></div>
              </div>
            </div>
          </a>
        )
      ))}
      {data.slice(0, data.length / 2).map(service => (
        service && service.link && (
          <a class="service-link" href={service.link} aria-label={service.name + ' Link'}>
            <div class='service'>
              <div class='service-color' style={{backgroundColor: service.color}}></div>
              <div class='service-content'>
                {service.icon && <img alt={service.name + ' Icon'} loading='lazy' src={`/img/${service.icon}`} />}
                <h2>{service.name}</h2>
                <div class="horizontal-line"></div>
              </div>
              <h3 class='service-desc'>{service.desc}</h3>
              <div class='barhold' style={{backgroundColor: `${service.color}20`}}>
                <div class='bar' style={{width: `${service.completed}%`, backgroundColor: service.color}}></div>
              </div>
            </div>
          </a>
        )
      ))}
    </div>
    
    <div class="slide-track">
      {data.slice(data.length / 2).map(service => (
        service && service.link && (
          <a class="service-link" href={service.link} aria-label={service.name + ' Link'}>
            <div class='service'>
              <div class='service-color' style={{backgroundColor: service.color}}></div>
              <div class='service-content'>
                {service.icon && <img alt={service.name + ' Icon'} loading='lazy' src={`/img/${service.icon}`} />}
                <h2>{service.name}</h2>
                <div class="horizontal-line"></div>
              </div>
              <h3 class='service-desc'>{service.desc}</h3>
              <div class='barhold' style={{backgroundColor: `${service.color}20`}}>
                <div class='bar' style={{width: `${service.completed}%`, backgroundColor: service.color}}></div>
              </div>
            </div>
          </a>
        )
      ))}
      {data.slice(data.length / 2).map(service => (
        service && service.link && (
          <a class="service-link" href={service.link} aria-label={service.name + ' Link'}>
            <div class='service'>
              <div class='service-color' style={{backgroundColor: service.color}}></div>
              <div class='service-content'>
                {service.icon && <img alt={service.name + ' Icon'} loading='lazy' src={`/img/${service.icon}`} />}
                <h2>{service.name}</h2>
                <div class="horizontal-line"></div>
              </div>
              <h3 class='service-desc'>{service.desc}</h3>
              <div class='barhold' style={{backgroundColor: `${service.color}20`}}>
                <div class='bar' style={{width: `${service.completed}%`, backgroundColor: service.color}}></div>
              </div>
            </div>
          </a>
        )
      ))}
    </div>
  </div>
</div>

<style>
  .title {
    left: 50px;
    width: calc(100% - 50px);
    background: url(/img/header_bg.webp) 0 0;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    filter: brightness(150%);
    font-size: 60px;
    font-family: Gilroy;
    position: relative;
  }

  .slide {
    height: 400px;
    width: 300px;
    position: absolute;
  }

  .subtitle {
    color: var(--bg-text);
    left: 50px;
    width: 70%;
    font-size: 25px;
    position: relative;
  }

  @keyframes scrollfwd {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(calc(-450px * 5.35));
    }
  }

  @keyframes scrollback {
    0% {
      transform: translateX(calc(-450px * 5.35));
    }
    100% {
      transform: translateX(0);
    }
  }

  .svc-holder {
    margin-bottom:200px;
    left: 50%;
    transform: translate(-50%, 0);
    max-width: 1500px;
    z-index: -1;
    position: relative;
  }

  .slider {
    height: auto;
    margin: auto;
    top: 30px;
    overflow-x: hidden;
    position: relative;
    rotate: -2deg;
    z-index: 1;
    width: 1500px;
  }

  .slider::before,
  .slider::after {
    background: linear-gradient(
      to right,
      var(--bg-color) 0%,
      rgba(255, 255, 255, 0) 100%
    );
    pointer-events: none;
    content: "";
    height: 100%;
    position: absolute;
    width: 200px;
    z-index: 2;
  }

  .slider::after {
    right: 0;
    top: 0;
    transform: rotateZ(180deg);
  }

  .slider::before {
    left: 0;
    top: 0;
  }

  .slide-track {
    animation: scrollfwd 80s linear infinite;
    display: flex;
    width: calc(450px * 14);
  }

  .slide-track:nth-child(2) {
    animation: scrollback 80s linear infinite;
    transform: translate(0, 100px);
    display: flex;
    flex-direction: row;
    width: calc(450px * 14);
  }

  .service {
    height: 250px;
    width: 450px;
    border-radius: 16px;
    box-shadow: 0px 0px 20px #00000020;
    margin: 15px;
    overflow: hidden;
  }

  .service-link {
    color: rgb(34,37,41);
    text-decoration: none;
  }

  .service-color {
    width: 100%;
    height: 25px;
    top: 0;
    left: 0;
    position: relative;
  }

 .horizontal-line {
      flex-grow: 1;
      height: 1px;
      background-color: var(--color);
      opacity: 0.5;
      margin-left: 10px;
    }

  .service-content {
    margin: 0px 20px 0px 20px;
    top: 15px;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items:center;
    justify-content: space-between;
    gap: 18px;
    position: relative;
  }

  .service-content img {
    object-fit: contain;
    width: 50px;
    height: 50px;
    position: relative;
  }

  .service-content h2 {
    margin-bottom:0px;
    font-family: 'Gilroy';
    font-size: 29px;
    display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
    position: relative;
  }

.service-desc {
  top: 20px;
  left: 50%;
  width: 90%;
  transform: translate(-50%, 0);
  font-size: 22px;
  font-weight: 200;
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  position: relative;
}

  .barhold {
    top: 30px;
    left: 50%;
    transform: translate(-50%, 0);
    width: 350px;
    height: 18px;
    border-radius: 20px;
    overflow: hidden;
    position: relative;
  }

  .bar {
    height: 18px;
    border-radius: 80px;
  }

  @media only screen and (max-width: 1000px) {
    .title {
      font-size: 45px;
      left: 20px;
    }
    .subtitle {
      left: 20px;
      font-size: 25px;
      width: 90%;
    }

    .svc-holder {
      margin-bottom: 50px;
    }

    .back {
      transform: translate(0, 0px);
      animation: none;
    }

    .slide-track {
      pointer-events: none;
    }

    .slide-track:nth-child(2) {
      display: none;
    }

    .svc-holder {
      top: 100px;
      left: 50%;
      transform: translate(-50%, 0);
      max-width: 1500px;
      position: relative;
    }
    .slider {
      left: 50%;
      transform: translate(-50%, 0);
      width: 110%;
    }
    .slider::before,
    .slider::after {
      content: "";
      height: 100%;
      position: absolute;
      width: 50px;
      z-index: 2;
    }
  }

  @media only screen and (min-width: 2000px) {
    .svc-holder {
      margin-top: 100px;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .slide-track {
      animation: none !important;
      transform: translate(0, 0);
    }
    .slide-track:nth-child(2) {
      transform: translate(-200px, 0);
    }
  }
</style>
