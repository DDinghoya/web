---
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { getCollection } from "astro:content";
import { t } from "i18next";
import { localizePath } from "astro-i18next";
import { Trans } from "astro-i18next/components";
import { Icon } from "astro-icon/components";
import TableOfContents from "../components/TableOfContents.astro";

const url = new URL(Astro.request.url);
let currentPath = url.pathname;

let posts = await getCollection("guide");
type Props = CollectionEntry<"guide">["data"];
posts = posts.slice(3);
posts.sort((a, b) => (`/guide/${a.slug}/` === currentPath ? -1 : 1));
let { title, description, icon, pubDate, heroImage, body } = Astro.props;

pubDate = new Date(pubDate).toLocaleDateString('en-US', {
  year: "numeric",
  month: "2-digit",
  day: "2-digit"
});

const readingTime = (body: string) => {
  if (!body) {
    return 0;
  }
  const wordsPerMinute = 200;
  const textLength = body.split(" ").length;
  return Math.ceil(textLength / wordsPerMinute);
};

// Get the headings from this, it is all the ones where they have ## or ### in the markdown
// Then we can use this to generate the table of contents
function extractHeadings(markdown: string) {
  const headings = [];
  const lines = markdown.split('\n');
  
  lines.forEach((line) => {
    // Match h2 (##) and h3 (###) headings
    const h2Match = line.match(/^## (.+)/);
    const h3Match = line.match(/^### (.+)/);
    
    if (h2Match) {
      headings.push({
        text: h2Match[1],
        depth: 2,
        slug: h2Match[1]
          .toLowerCase()
          .replace(/-/g, '-')         // Replace existing hyphens with triple hyphens
          .replace(/[^a-z0-9---]+/g, '-') // Replace other special chars with single hyphens
          .replace(/(^-|-$)/g, '')      // Remove leading/trailing hyphens
      });
    } else if (h3Match) {
      headings.push({
        text: h3Match[1],
        depth: 3,
        slug: h3Match[1]
          .toLowerCase()
          .replace(/-/g, '-')
          .replace(/[^a-z0-9---]+/g, '-')
          .replace(/(^-|-$)/g, '')
      });
    }
  });

  return headings;
}

const headings = extractHeadings(body);
---

<Layout
  title={`WiiLink - ${t("guidePost.name")} (${title})`}
  description={`${title} - ${description}`}
  image="/img/Guide_embed.webp">
  <Header />
  <div class="flex">
    <div class={`guidehold ${heroImage ? 'text-white' : ''}`}>
      <div
        class="offcanvas-body"
        style="overflow-y:visible; position:relative;">
        <div>
          <div class="sidebarcontent">
            <div class="post" style="border-radius: 16px 16px 8px 8px;">
              <a href={localizePath(`/guide/install/`)}>
                <img class="mainimg" src="/img/guidebg-1.webp" />
                <div
                  class="title-main"
                  style="color:white !important; text-align: left; font-size:20px; font-family:Gilroy;">
                  <Icon
                    name="download"
                    style="margin-right:5px; margin-bottom:3px;"
                  />
                  {t("guidePost.installGuide")}
                </div>
              </a>
            </div>
            <div class="post" style="border-radius: 8px;">
              <a href={localizePath(`/guide/problemsolving/`)}>
                <img class="mainimg" src="/img/guidebg-3.webp" />
                <div
                  class="title-main"
                  style="color:white !important; text-align: left; font-size:20px; font-family:Gilroy;">
                  <Icon
                    name="lucide:circle-alert"
                    style="margin-right:5px; margin-bottom:3px;"
                  />
                  {t("guidePost.problemSolving")}
                </div>
              </a>
            </div>
            <div class="post" style="border-radius: 8px 8px 16px 16px;">
              <a href={localizePath(`/guide/faq/`)}>
                <img class="mainimg" src="/img/guidebg-2.webp" />
                <div
                  class="title-main"
                  style="color:white !important; text-align: left; font-size:20px; font-family:Gilroy;">
                  <Icon
                    name="circle-help"
                    style="margin-right:5px; margin-bottom:3px;"
                  />
                  {t("guidePost.faq")}
                </div>
              </a>
            </div>
          </div>
          <div class="sidebarcontent" style="margin-bottom:40px;">
            {
              posts.map((post, index) => (
                <>
                  {index === 0 && currentPath !== `/guide/${post.slug}/` && (
                    <hr style="transform:translate(0, 8px); border-top: 2px solid var(--border-color);" />
                  )}
                  <div
                    class={`post2 ${currentPath === `/guide/${post.slug}/` ? "active" : ""}`}>
                    <a href={localizePath(`/guide/${post.slug}/`)}>
                      <div class="title2">
                        <Icon
                          name={post.data.icon}
                          style="margin-right:8px; margin-bottom:3px;"
                        />{" "}
                        {post.data.title}
                      </div>
                    </a>
                  </div>
                  {index === 0 && currentPath === `/guide/${post.slug}/` && (
                    <hr style="transform:translate(0, 8px); border-top: 2px solid var(--border-color);" />
                  )}
                </>
              ))
            }
          </div>

          <a href="https://wii.hacks.guide">
            <div class="wiiguide" style="margin-bottom:60px !important; display:flex; flex-direction: row; align-items: center; justify-content: center; gap:3px;">
              <Icon name="lucide:earth" />
              <Trans i18nKey="guidePost.visitWiiHacks">
                Visit wii.hacks.guide
              </Trans>
            </div></a
          >
        </div>
      </div>
    </div>
    <div class="guideholder">
      <div class="guidetop">
        <div class="guidetopholder">
          <div
            style={ `${heroImage ? "color: white;" : ""} padding:18px; display:flex; flex-direction: row; align-items:center; justify-content:space-between; gap:8px;`}>
            <span
              style="display:flex; flex-direction: row; align-items:center; gap:28px;">
              <button
                id="sidebarToggle"
                class="sidebar-toggle"
                style={ `${heroImage ? "color: white !important;" : ""}`}
                aria-label="Toggle Sidebar">
                <Icon name="lucide:chevron-left" />
              </button>
              <div class="opacityshow" style="opacity: 0;">
                <h2
                  style={ `${heroImage ? "color: white !important;" : ""} margin-bottom:0; font-size:28px; font-family: Gilroy; display:flex; flex-direction: row; align-items:center; gap: 8px;`}>
                  <Icon name={icon} style="font-size: 28px;" />
                  {title} <span style="margin-left:8px; padding:8px 8px; background-color: var(--bg-opaque-1); border-radius:8px; font-size: 18px; font-family: system-ui; display:flex; flex-direction:row; align-items:center; gap:3px;"><Icon name="clock"/> {readingTime(body)} min read</span>
                </h2>
              </div>
            </span>
            <span
              class="datehide"
              style={ `${heroImage ? "color: white !important;" : ""} font-size: 18px; background: var(--bg-opaque-1); border: none; border-radius: 8px; padding: 12px 18px; cursor: pointer; transition: 0.3s;`}>
              Last updated on {pubDate}
            </span>
            <div class="progress-bar"></div>
          </div>
          <img src={heroImage} class="topImage" />
          <div
            class="opacityleave"
            style={ `${heroImage ? "color: white !important;" : ""} padding:18px; display:flex; flex-direction: column; gap:8px;"`}>
            <Icon name={icon} style="font-size: 40px;" />
            <h1 class="title" style={ `${heroImage ? "color: white !important;" : ""}`}>
              {title}
              <span
                style={ `${heroImage ? "color: white !important;" : ""} font-size: 18px; font-family: system-ui; text-align:right; display:flex; flex-direction:row; align-items:center; justify-content:start; gap:3px;`}>
                <Icon name="clock" style="margin-right:8px;" />
                {readingTime(body)} min read<span class="dateShow" style="display:none;"> | Last updated on {pubDate}</span>
              </span>
            </h1>
          </div>
        </div>
        <div style="bottom:0; left:0; width:100%; position:absolute;">
          <div
            style="bottom:0; width:100%; height: 24px; background-color: var(--bg-color); z-index:0; position:absolute;">
          </div>
          <div
            style="width:100%; height: 8px; border-radius: 8px 8px 0px 0px; background-color: var(--bg-color-secondary); z-index:1; position:relative;">
          </div>
        </div>
      </div>
      <div class="guidecontent" id="container2">
        <slot />
      </div>
      <div>
        <Footer
          top="top:8px; border-radius: 8px 8px 0px 0px; overflow:hidden;"
        />
      </div>
    </div>
    <div class="opacityshow" style="height:100%; margin-top: 18px;">
      <TableOfContents headings={extractHeadings(body)} />
    </div>
  </div>
</Layout>

<script is:inline>
  if (window.matchMedia("(max-width: 1000px)").matches) {
    let guidehold = document.querySelector(".guidehold");
    guidehold.style.display = "block";
    let offcanvasBody = document.querySelector(".holdcontainer");
    offcanvasBody.appendChild(guidehold);
    offcanvasBody.style.marginBottom = "30px";
    offcanvasBody.style.borderBottom = "2px solid var(--border-color)";
  }

  var flex = document.getElementsByClassName("flex")[0];
  const observer = new MutationObserver(function (mutations, observer) {
    flex.style.height = "";
  });
  observer.observe(flex, {
    attributes: true,
    attributeFilter: ["style"]
  });

  const sidebarToggle = document.getElementById("sidebarToggle");
  const guidehold = document.querySelector(".guidehold");
  const guideholder = document.querySelector(".guideholder");
  let isOpen = true;

  if (window.innerWidth > 1000) {
    sidebarToggle?.addEventListener("click", () => {
      isOpen = !isOpen;
      guidehold.style.width = isOpen ? "380px" : "0px";
      guidehold.style.opacity = isOpen ? "1" : "0";
      sidebarToggle.classList.toggle("closed");
      guideholder.style.width = isOpen ? "90%" : "95%";
    });
  }

  if (CSS.supports('animation-timeline: scroll()')) {
    const guideholder = document.querySelector('.guideholder');
    const progressBar = document.querySelector('.progress-bar');
    const opacityLeave = document.querySelector('.opacityleave');
    const opacityShow = document.querySelector('.opacityshow');
  
    guideholder.addEventListener('scroll', () => {
      const scrolled = guideholder.scrollTop;
      const maxScroll = 100; // 300px scroll threshold
      const opacity = Math.max(0, 1 - (scrolled / maxScroll));
      opacityLeave.style.opacity = opacity;
      opacityShow.style.opacity = 1 - opacity;
  
      const maxScroll1 = guideholder.scrollHeight - guideholder.clientHeight;
      const progress = (scrolled / maxScroll1) * 100;
      progressBar.style.width = `${progress}%`;
    });
  }
</script>

<style>
  h3 {
    color: var(--color) !important;
  }

  img {
    width: 500px;
  }

  .title {
    font-size: 45px;
    font-family: Gilroy;
    display: flex;
    flex-direction: row;
    align-items: end;
    justify-content: space-between;
    gap: 8px;
  }

  .image {
    width: 100%;
    height: 100%;
    z-index: 0;
    position: absolute;
  }

  .topImage {
    top: 0;
    left: 0;
    width: 100%;
    transform: scale(1.1);
    filter: blur(8px) brightness(0.7);
    z-index: -1000;
    pointer-events: none;
    position: absolute;
  }

  .head {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    position: fixed;
  }

  .fade2 {
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    background: linear-gradient(
      0deg,
      rgba(24, 24, 24, 1) 70%,
      rgba(0, 212, 255, 0) 100%
    );
    z-index: 1;
    position: absolute;
  }

  body {
    overflow: hidden;
  }

  body > .skiptranslate {
    display: none;
  }

  .guidetop {
    width: 100%;
    height: 300px;
    display: flex;
    overflow: hidden;
    position: sticky;
    top: 0;
    z-index: 100;
    transition: height 0.3s;
  }

  @supports (animation-timeline: scroll()) {
    .guidetop {
      animation: heightChange 1s linear both;
      animation-timeline: scroll();
      animation-range: entry 0% entry 300px;
    }

    @keyframes heightChange {
      from {
        height: 300px;
      }
      to {
        height: 100px;
      }
    }
  }

  @supports not (animation-timeline: scroll()) {
    .guidetop {
      position: fixed;
      top: 0;
      width: 100%;
      height: 300px;
      transition: height 0.3s;
    }

    .guideholder {
      padding-top: 300px; /* Ensure content is not hidden behind the fixed header */
    }

    .guideholder.scroll {
      height: 100px;
    }
  }

  .guidetopholder {
    width: 100%;
    height: calc(100% - 16px);
    border-radius: 16px 16px 8px 8px;
    background-color: var(--bg-color-tertiary);
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    z-index: 10;
    overflow: hidden;
    position: relative;
  }

  .progress-bar {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0%;
    height: 8px;
    background: var(--bg-opaque-2);
    transform-origin: 0%;
    z-index: -100;
  }

  .guidecontent {
    width: 100%;
    padding: 20px;
    left: 50%;
    scroll-behavior: smooth;
    border: 0px solid rgba(255, 0, 0, 0.055) !important;
    border-radius: 0px 0px 8px 8px;
    background-color: var(--bg-color-secondary) !important;
    transform: translate(-50%, 0);
    font-family: Cafe;
    text-align: justify;
    position: relative;
  }

  .flex {
    bottom: 0;
    left: 50%;
    width: calc(100% - 20px);
    max-width: 1600px;
    height: calc(100% - 120px) !important;
    display: flex;
    transform: translate(-50%, 0);
    align-items: flex-end;
    gap: 18px;
    z-index: 0;
    justify-content: center;
    flex-wrap: nowrap;
    position: fixed;
  }

  .guidehold {
    width: 450px;
    height: 100%;
    border-radius: 16px 16px 0px 0px;
    -ms-overflow-style: none;
    scrollbar-width: none;
    overflow: scroll;
    overflow-x: hidden;
    transition: all 0.3s ease;
  }

  .holder::-webkit-scrollbar {
    display: none;
  }

  .guideholder {
    width: 100%;
    height: 100%;
    max-width: 1000px;
    top: 130px;
    backdrop-filter: blur(8px);
    perspective: 1px;
    scroll-behavior: smooth;
    border-top-left-radius: 16px;
    border-top-right-radius: 16px;
    z-index: 1;
    animation-name: fadeup;
    animation-duration: 0.5s;
    animation-fill-mode: forwards;
    overflow: scroll;
    overflow-x: hidden;
  }

  .guideholder::-webkit-scrollbar {
    display: none;
  }

  .holder::-webkit-scrollbar {
    display: none;
  }

  @keyframes fadeup {
    0% {
      opacity: 0;
      transform: translate(0, 28px);
    }
    100% {
      opacity: 1;
      transform: translate(0, 0px);
    }
  }

  .mainimg {
    transform: translate(-15px, -15px);
    width: 100%;
    scale: 110%;
    transform-origin: center;
    transition: 0.5s;
    background-size: cover;
    position: absolute;
  }

  a {
    text-decoration: none;
  }

  .post:hover .mainimg {
    filter: blur(3px) brightness(0.7);
    scale: 105%;
    transition: 0.3s;
  }

  .post:active,
  .post2:active {
    scale: 97%;
    transition: 0.2s;
  }

  .offcanvas {
    margin: 8px;
    border-radius: 18px;
    box-shadow: 0px 0px 20px #00000040;
    overflow: hidden;
    height: calc(100% - 18px);
  }

  .title-main {
    font-family:
      systemui,
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      "Open Sans",
      "Helvetica Neue",
      sans-serif;
    color: white;
    transition: 0.3s;
    z-index: 100;
    position: relative;
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .title2 {
    font-family:
      systemui,
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      "Open Sans",
      "Helvetica Neue",
      sans-serif;
    color: #121212a2;
    transition: 0.3s;
    z-index: 100;
    position: relative;
  }

  .title2:hover {
    color: #121212;
    transition: 0.3s;
  }

  .btn {
    left: 0;
    z-index: 1000;
    position: absolute;
  }

  .sidebarholder {
    width: 17%;
    height: 87%;
    bottom: 0;
    left: 8%;
    border-radius: 16px;
    position: absolute;
    overflow: scroll;
  }

  .fade-sidebar {
    top: 0;
    left: 0;
    width: 530px;
    height: 80px;
    background: rgb(255, 255, 255);
    background: linear-gradient(
      180deg,
      rgb(255, 255, 255) 0%,
      rgba(0, 0, 0, 0) 100%
    );
    z-index: 100;
    position: absolute;
  }

  .sidebarcontent {
    font-family: Cafe;
    font-size: 15px;
    margin-bottom: 8px;
    z-index: 0;
    position: relative;
  }

  .post {
    width: 100%;
    height: 60px;
    padding: 15px;
    overflow: hidden;
    border-radius: 16px;
    margin-bottom: 6px;
    transition: 0.2s;
    position: relative;
  }

  .post2 {
    width: 100%;
    padding: 15px;
    border-radius: 16px;
    margin-bottom: 8px;
    overflow: hidden;
    transition: 0.2s;
    position: relative;
  }

  .post2.active {
    padding: 20px 15px;
    background-color: var(--bg-color-tertiary);
    border-radius: 16px;
    transition: 0.2s;
  }

  .post2.active::after,
  .post.active::after {
    right: 20px; /* Move the arrow inside the element on hover */
    opacity: 1;
  }

  .post2::after,
  .post::after {
    content: "\f061"; /* FontAwesome right arrow */
    font-family: "FontAwesome";
    font-weight: 900;
    top: 50%;
    transform: translate(0, -50%);
    position: absolute;
    right: 40px; /* Start from outside of the element */
    opacity: 0;
    transition: all 0.5s ease;
  }

  .post2:hover::after,
  .post:hover::after {
    right: 20px; /* Move the arrow inside the element on hover */
    opacity: 1;
  }

  .post2:hover {
    padding: 20px 15px;
    background-color: var(--bg-color-secondary);
    transition: 0.2s;
    position: relative;
  }

  .post2:hover + .post2 {
    padding: 12.5px 15px;
    transition: 0.2s;
  }

  /* Adjust next sibling */
  .post2:has(+ .post2:hover) {
    padding: 12.5px 15px;
    transition: 0.2s;
  }

  i {
    transition: 0.2s;
  }

  .post2:hover i {
    transform: scale(1.2) rotate(5deg);
    transition: 0.2s;
  }

  .wiiguide {
    top: 18px;
    width: 100%;
    background-color: rgb(79, 79, 211);
    border-radius: 16px;
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-size: 18px;
    text-align: center;
    color: white !important;
    padding-top: 20px;
    padding-bottom: 20px;
    position: relative;
    transition: 0.2s;
  }

  .color {
    background: #0d6efd;
    background: AccentColor;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    filter: brightness(150%);
  }

  .hover {
    display: none;
  }

  .wiiguide:hover {
    background-color: rgb(58, 58, 197);
    text-decoration: underline;
    transition: 0.2s;
  }

  .sidebar-toggle {
    display: none;
    left: 0;
    z-index: 1000;
    background: var(--bg-opaque-1);
    border: none;
    border-radius: 8px;
    padding: 12px 8px;
    cursor: pointer;
    transition: 0.3s;
  }

  .sidebar-toggle.closed svg {
    transform: rotate(180deg);
  }

  @media (min-width: 1000px) {
    .sidebar-toggle {
      display: flex;
    }
  }

  @media (max-width: 1000px) {
    h2 {
      font-size: 30px !important;
    }
    .flex {
      top: 0;
      left: 0;
      width: 100%;
      height: 100% !important;
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 18px;
      transform: none;
      margin-top: 0px;
      position: absolute;
    }
    .title {
      font-size: 38px;
      flex-direction: column !important;
      align-items: start;
      justify-content: start;
    }
    .guideholder {
      width: 100% !important;
      top: 0px;
      border: 0px solid rgba(255, 0, 0, 0.055) !important;
      background-color: var(--bg-color) !important;
      backdrop-filter: blur(8px);
      perspective: 1px;
      scroll-behavior: smooth;
      border-top-left-radius: 0px;
      border-top-right-radius: 0px;
      z-index: 1;
      resize: none;
      overflow: scroll;
      overflow-x: hidden;
      position: relative;
    }
    .opacityshow {
      display: none !important;
    }
    .guidetop {
      border-radius: 0px;
    }
    .guidetopholder {
      border-radius: 0px 0px 8px 8px;
      position: relative;
    }
    .offcanvas-body {
      padding: 0px !important;
    }
    .guidehold {
      width: 100%;
      padding: 0px !important;
      overflow: hidden;
      display: none;
    }
    .wiiguide {
      display: none;
    }
    .topImage {
      height: 600px;
      width: 100%;
      object-fit: cover;
      object-position: center;
      overflow: hidden;
      background-position: center;
      background-repeat: no-repeat;
    }
    .holder {
      display: flex !important;
      position: fixed !important;
    }
    .datehide {
      display: none;
    }
    .dateShow {
      display: flex !important;
    }
    #togglebtn {
      display: none;
    }
    .post2 {
      padding: 10px;
    }
    .sidebarcontent {
      top: 0;
    }
  }
</style>
<style is:global>
  @media (max-width: 1000px) {
    h2 {
      font-size: 30px !important;
    }
  }
</style>
