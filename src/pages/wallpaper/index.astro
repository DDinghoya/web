---
import { changeLanguage } from "i18next";
import Layout from "../../layouts/Layout.astro";
import { Icon } from "astro-icon/components";

changeLanguage("en");
---

<Layout
  title="WiiLink - Animated wallpaper"
  description="WiiLink Animated Wallpaper for use in applications like 'Lively Wallpaper' (Windows) and 'Plash' (macOS). \n\n Use /#dark=true for dark mode and /#light=true (or leave blank) for light mode.">
  <html>
    <body>
      <div id="popup" class="popup">
        <div
          style="display:flex; align-items:center; justify-content:space-between; flex-wrap:wrap; position:relative;">
          <h4>
            <b>
              <Icon name="lucide:brush" style="margin-right:8px; margin-bottom:3px;" /> Thanks for using
              the WiiLink Animated Wallpaper
            </b>
          </h4>
          <p style="font-size:15px; opacity:0.5;">
            Closing in <b id="sec">5</b>.
          </p>
        </div>
        <hr style="border-top: 2px solid var(--border-color);" />
        <ul style="margin-left:0px;">
          <li>
            Use <b>/#dark=true</b> for dark mode and <b></b>/#light=true
          </li> (or leave blank) for light mode.
        </ul>
        <li>
          Use <b>/#dock=left</b> for left dock, <b>/#dock=right</b> for right dock,
          <b>/#dock=top</b> for top dock, <b>/#dock=bottom</b> for bottom dock.
        </li>
        <li>
          Use <b>/#dockSize=<m id="animatedNumber">50</m></b> for to adjust for a
          dock size of <m id="animatedNumber2">50</m>px.
        </li>
        <li>
          Use <b>/#noWarning=true</b> to disable this message.
        </li>
      </div>
    </body>
    <div class="symbolholder">
      <div class="backsymbol" id="movable">
        <div class="square2" id="square2"></div>
        <div class="square"></div>
        <div class="bottomleftcornerholder">
          <svg
            class="bottomleftcorner"
            width="100%"
            height="100%"
            viewBox="0 0 391 364"
            version="1.1"
            xmlns="http://www.w3.org/2000/svg"
            xmlns:xlink="http://www.w3.org/1999/xlink"
            xml:space="preserve"
            xmlns:serif="http://www.serif.com/"
            style="fill-rule:evenodd;clip-rule:evenodd;stroke-linejoin:round;stroke-miterlimit:1.5;">
            <g transform="matrix(1,0,0,1,-1856,-885)">
              <path
                id="pathcorner"
                d="M1903.53,886.132L1857.55,885.823C1857.93,885.824 1852.78,908.579 1887.46,940.825C1922.21,973.123 2200.55,1234 2200.55,1234C2200.55,1234 2214.8,1247.92 2246.02,1247.92L2245.96,1202.65L2239.82,1202.7C2231.35,1202.68 2228.7,1197.77 2214.96,1184.58C2188.64,1159.33 1909.5,898.26 1909.5,898.26C1909.5,898.26 1903.8,892.648 1903.53,886.132Z"
                style="stroke:AccentColor;stroke-width:1px;"></path>
            </g>
          </svg>
          <img
            src="/img/corner-bot.svg"
            class="svcicons"
            style="top:5px; left:-5px; z-index:-10; position:absolute;"
            width="395px"
            height="395px"
          />
        </div>
      </div>
    </div>
  </html>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", async function () {
    document.getElementById("popup").style.display = "block";
    setTimeout(function () {
      var popup = document.getElementById("popup");
      if (popup) {
        popup.classList.add("hide");
      }
    }, 5000);
    var secInit = 5;
    setInterval(function () {
      var animatedNumber = document.getElementById("animatedNumber");
      var animatedNumber2 = document.getElementById("animatedNumber2");
      var sec = document.getElementById("sec");
      var number = Math.floor(Math.random() * 100);
      animatedNumber.innerHTML = number;
      animatedNumber2.innerHTML = number;
      sec.innerHTML = secInit--;
    }, 1000);

    function getUrlParameter(name) {
      name = name.replace(/[[]/, "\\[").replace(/[\]]/, "\\]");
      var regex = new RegExp("[\\#?&]" + name + "=([^&#]*)");
      var results = regex.exec(location.hash);
      return results === null
        ? ""
        : decodeURIComponent(results[1].replace(/\+/g, " "));
    }

    var dark = getUrlParameter("dark");
    var light = getUrlParameter("light");
    var dock = getUrlParameter("dock");
    var dockSize = getUrlParameter("dockSize");
    var noWarning = getUrlParameter("noWarning");

    if (dark == "true") {
      document.documentElement.classList.add("dark");
    }
    if (light == "true") {
      document.documentElement.classList.remove("dark");
    }
    if (dock == "left") {
      if (dockSize) {
        document.getElementById("movable").style.width =
          "calc(100% - " + dockSize + "px)";
      }
      document.getElementById("movable").classList.add("left");
    }
    if (dock == "right") {
      if (dockSize) {
        document.getElementById("movable").style.width =
          "calc(100% - " + dockSize + "px)";
      }
      document.getElementById("movable").classList.add("right");
    }
    if (dock == "top") {
      if (dockSize) {
        document.getElementById("movable").style.height =
          "calc(100% - " + dockSize + "px)";
      }
      document.getElementById("movable").classList.add("top");
    }
    if (dock == "bottom") {
      if (dockSize) {
        document.getElementById("movable").style.height =
          "calc(100% - " + dockSize + "px)";
      }
      document.getElementById("movable").classList.add("bottom");
    }
    if (noWarning == "true") {
      document.getElementById("popup").style.display = "none";
    }
  });
</script>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    font-size: 20px;
    line-height: 1.6;
  }

  html {
    --color: black;
    --bg-color: white;
    --bg-color-hero: #ffffffde;
    --bg-color-light: #ffffff;
    --bg-color-secondary: #f8f9fa;
    --bg-color-tertiary: #f1f3f5;
    --bg-color-absolute: #ffffff;
    --border-color: #00000020;
    --shadow-color: #00000020;
    --bg-select: #eaeaea;
    --bg-opaque-1: #00000010;
    --bg-opaque-2: #00000020;
    --opacity: 0.6;
  }

  html.dark {
    --color: white;
    --bg-color: #161515;
    --bg-color-hero: #161515ee;
    --bg-color-light: #202020;
    --bg-color-secondary: #1a1a1a;
    --bg-color-tertiary: #1e1e1e;
    --bg-color-absolute: #000000;
    --border-color: #ffffff20;
    --shadow-color: #ffffff05;
    --bg-select: #0a0a0a30;
    --bg-opaque-1: #ffffff10;
    --bg-opaque-2: #ffffff20;
    --opacity: 0.3;
  }

  .backsymbol {
    width: calc(100% - 28px);
    height: calc(100% - 28px);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1;
    position: absolute;
  }

  .symbolholder {
    background-color: var(--bg-color-absolute);
    top: 0;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    z-index: 1;
    overflow: hidden;
    position: fixed;
  }

  .popup {
    position: fixed;
    width: 95%;
    max-width: 1000px;
    top: 20px;
    left: 50%;
    transform: translateX(-50%);
    padding: 20px;
    background-color: var(--bg-color-secondary);
    border: 1px solid var(--border-color);
    border-radius: 5px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    opacity: 1;
    z-index: 1000000000;
    transition: opacity 2s;
    display: none;
  }

  .popup.hide {
    opacity: 0;
  }

  .bottom {
    top: 14px !important;
  }

  .left {
    right: 14px !important;
  }

  .right {
    left: 14px !important;
  }

  .top {
    bottom: 14px !important;
  }

  #square2 {
    width: calc(100% - 30px);
    height: calc(100% - 30px);
    left: 15.5px;
    top: 15.5px;
    background-color: var(--bg-color-hero);
    transform: translate(0%, 0%);
    border-radius: 4px;
    z-index: 1;
    scroll-behavior: smooth;
    overflow: hidden;
    position: absolute;
  }

  #pathcorner {
    fill: #0d6efd;
    fill: AccentColor !important;
  }
  .bottomleftcorner {
    animation: changecolor 10s linear infinite;
  }
  .bottomleftcornerholder {
    width: 400px;
    height: 400px;
    bottom: -15px;
    left: -11px;
    scale: 31.6%;
    transform: translate(-100%, 100%);
    pointer-events: none;
    z-index: 2;
    position: absolute;
  }

  @keyframes changecolor {
    0% {
      filter: hue-rotate(0deg);
    }
    100% {
      filter: hue-rotate(360deg);
    }
  }
  @keyframes changecolordark {
    0% {
      filter: hue-rotate(0deg) invert(1);
    }
    100% {
      filter: hue-rotate(360deg) invert(1);
    }
  }

  .square {
    width: 100%;
    height: 100%;
    background: linear-gradient(
      41deg,
      rgba(0, 138, 255, 1) 0%,
      rgba(255, 0, 59, 1) 100%
    );
    z-index: 0;
    animation: changecolor 10s linear infinite;
    border-radius: 8px;
    position: absolute;
  }
</style>
