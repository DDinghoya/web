---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import Footer from "../../../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../../../components/FormattedDate.astro";
import Ad from "../../../components/Ad.astro";
import i18next, { t, changeLanguage } from "i18next";
import { Trans } from "astro-i18next/components";
import { Icon } from "astro-icon/components";

changeLanguage("vi");

const posts = (await getCollection("blog")).sort((b, a) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf());
const sliceDescription = description => {
    return (description.split(" ").slice(0, 20).join(" ") +
        (description.split(" ").length > 20 ? "..." : ""));
};
---

<Layout
  title={t("news.mainTitle")}
  description={t("news.mainDesc")}
  image="/img/News_embed.webp"
/>
<Header isGuide="display:none;" />
<div class="hold">
  <img class="newstop" src="/img/newstop.webp" />
  <div class="welcome-msg">
    <h2 style="font-size:40px; font-family:Gilroy;">
      <Trans i18nKey="news.title">
        Here is the <span
          class="badge bg-warning"
          style="top:-5px; left:0px; font-size:20px; font-family:Gilroy, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; position:relative;"
        ></span><b style="font-family: Rubik;">WiiLink</b><span
          class="badge bg-warning"
          style="top:-20px; left:-4px; font-size:15px; font-family:inter, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; position:relative;"
          >news</span
        >
      </Trans>
    </h2>
    <h3 style="font-size: calc(1.3rem + .6vw);">
      <Trans i18nKey="news.subtitle">
        Catch up on all our <b class="color">antics</b>, as well as <b
          class="color">service updates</b
        >!
      </Trans>
    </h3>
  </div>
  <a href={`/news/${posts[0].slug}/`} class="newsHero" style={`background-color: var(--bg-color-secondary); text-decoration:none; display:block;`}>
      <div
        style="top:20px; right:20px; padding:3px 8px; border-radius:8px; background-color: var(--bg-opaque-1); color: white !important; z-index: 1000000; position:absolute;">
        <FormattedDate date={posts[0].data.pubDate} />
      </div>
      <img
      class="mainimg2"
      style="width:100%; height:100%; filter:blur(80px) brightness(0.5); transform: translate(0, -25%) scale(1.5); position:absolute;"
      src={posts[0].data.heroImage ? posts[0].data.heroImage : "/img/branding_bg.webp"}
      alt=""
      width="200px"
    />
      <div class="herodatahold">
        <img
          src={posts[0].data.heroImage}
          style="border-radius:8px; box-shadow:0px 0px 50px #ffffff20;"
          class="mobileimg"
          height="200px"
        />
        <div class="innerdata">
          <h1
            style="font-family: Gilroy; color:white !important; font-size:50px;">
            {posts[0].data.title}
          </h1>
          <h5 style="color:white !important;">
            <img
              src={posts[0].data.authImage}
              style="margin-right:5px; border-radius:8px;"
              height="40px"
            />
            {posts[0].data.author} | {posts[0].data.authTitle}
          </h5>
          <p style="color:white !important;">{posts[0].data.description}</p>
        </div>
      </div>
    </a>
  <div class="postholder">
    {
      posts.slice(1, 7).map(post => (
        <div
          class="post"
          onclick={'window.location.href="/news/' + post.slug + '/";'}
          style="cursor:pointer; transition: 0.2s;">
          <a
            href={`/news/${post.slug}/`}
            aria-label={post.data.title + " Link"}>
            <div style="top:20px; right:20px; padding:3px 8px; border-radius:8px; background-color: var(--bg-opaque-1); backdrop-filter: blur(8px); color: white !important; z-index: 1000000; position:absolute;">
              <FormattedDate date={posts[0].data.pubDate} />
            </div>
            {post.data.heroImage && (
              <img
                alt={post.data.title}
                class="heroImage"
                src={post.data.heroImage}
              />
            )}
            <div
              class="fadebefore"
              style="width:100%; bottom: 0; padding:20px; z-index:0; position:absolute;">
              <div style="width:100%; display:flex; flex-direction:row; align-items:center; gap:18px;">
                {post.data.authImage && (
                  <img
                    alt="News Author PFP"
                    class="authimage"
                    src={post.data.authImage}
                    alt=""
                  />
                )}
                <b style="width:100%; color:white !important; font-size:28px; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; text-align:left; position:relative;">
                  {post.data.title}
                </b>
              </div>
              <div
                class="descanim"
                style="margin-top: 8px; font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif; color: white !important;">
                {sliceDescription(post.data.description)}
              </div>
            </div>
          </a>
        </div>
      ))
    }
  </div>
  <hr
    style="left:50%; transform:translate(-50%, 0); max-width:1600px; margin-top:80px; margin-bottom:40px; border-top: 2px solid var(--bg-opaque-2); position:relative;"
  />
  <div class="postholdermini">
    {
      posts.slice(7).map(post => (
        <a href={`/news/${post.slug}/`} class="postmini">
          {post.data.heroImage && (
            <img
              style="width: 100%; height: 100%; object-fit: cover; filter:brightness(0.7); z-index:0; position:absolute;"
              width="100%"
              height="100%"
              src={post.data.heroImage}
              alt=""
            />
          )}
          <div style="bottom:0; left:0; margin: 20px; display:flex; flex-direction: column; align-items:start; gap: 3px; z-index: 1000; position:absolute;">
            <span style="display:flex; flex-direction:row; align-items:center; gap: 8px;">
              {post.data.authImage && (
                <img
                  src={post.data.authImage}
                  style="border-radius: 8px; width: 33px; height: 33px;"
                />
              )}
              <div style={`padding: 3px 8px; border-radius: 8px; background-color: var(--bg-opaque-1); backdrop-filter: blur(8px);`}>
               <span style={`${post.data.heroImage ? 'color: white !important;' : ''}`}>
                <FormattedDate date={post.data.pubDate} />
                </span>
              </div>
            </span>
            <div style={`font-size: 23px; ${post.data.heroImage ? 'color: white !important;' : ''}`}>{post.data.title}</div>
          </div>
        </a>
      ))
    }
  </div>
  <h3
    style="margin-top:200px; font-size: calc(1.3rem + .6vw); text-align:center; position:relative; width:100%;">
    <Trans i18nKey="news.rssTitle">
      <b
        >Want to get <c class="color">WiiLink news</c> on your site o service? Just
        use our <c class="color">RSS feed</c>!</b
      >
    </Trans>
  </h3>
  <a href="/rss.xml"
    ><buton
      class="btn center btn-success"
      style="left:50%; transform:translate(-50%, 0); margin-top:8px; z-index:1000; position:relative;">
      <Icon name="lucide:rss" style="margin-right:5px; margin-bottom:3px;" />
      {t("news.rssButton")}
    </buton></a
  >
</div>

<Footer />

<style>
  .hold {
    left: 50%;
    transform: translate(-50%, 0);
    width: calc(100% - 20px);
    max-width: 1500px;
    position: relative;
  }

  h2 {
    font-size: calc(1.3rem + 0.6vw);
  }

  .welcome-msg {
    top: 15px;
    max-width: 100%%;
    left: 50%;
    transform: translate(-50%, 0);
    position: relative;
  }

  .newstop {
    left: -30px;
    top: 70px;
    transform: translate(0, -50%);
    height: 200px;
    filter: opacity(0.1) invert(0);
    position: absolute;
  }

  .herodatahold {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 20px;
    position: relative;
  }

  .descanim {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    height: 0px;
    opacity: 0;
    transition: 0.2s;
  }

  .post:hover .descanim {
    height: 60px;
    opacity: 1;
    transition: 0.2s;
  }

  .color {
    background: url("/img/header_bg.webp");
    background: AccentColor;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    filter: brightness(150%);
  }

  .posthold {
    transform: translate(0, 0px);
    opacity: 0;
    transition: 0.5s;
    position: relative;
  }

  .post:nth-child(1) {
    animation: fadeup 200ms 0.3s forwards;
  }
  .post:nth-child(2) {
    animation: fadeup 200ms 0.35s forwards;
  }
  .post:nth-child(3) {
    animation: fadeup 200ms 0.4s forwards;
  }
  .post:nth-child(4) {
    animation: fadeup 200ms 0.45s forwards;
    border-radius: 8px 8px 8px 16px;
  }
  .post:nth-child(5) {
    animation: fadeup 200ms 0.5s forwards;
  }
  .post:nth-child(6) {
    animation: fadeup 200ms 0.55s forwards;
    border-radius: 8px 8px 16px 8px;
  }

  .posthold:hover {
    transform: translate(0, -5px);
    filter: drop-shadow(0px 0px 20px #37373756);
    transition: 0.2s;
  }

  .fadebefore::before {
    bottom: 0;
    left: 0;
    width: 100%;
    height: 300px;
    content: "";
    background: linear-gradient(
      180deg,
      rgba(255, 255, 255, 0) 30%,
      var(--bg-opaque-2) 100%
    );
    z-index: -100000;
    position: absolute;
  }

  .authimage {
    width: 40px;
    height: 40px;
    border-radius: 8px;
  }

  .mainpost:nth-child(1) {
    opacity: 1;
  }

  .postholder {
    width: 100%;
    margin-bottom: 100px;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    position: absolute;
    gap: 13px;
    top: 45px;
    left: 50%;
    transform: translate(-50%, 0px);
    position: relative;
    z-index: 10;
  }

  .postholdermini {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 20px;
    top: 30px;
    left: 50%;
    transform: translate(-50%, 0px);
    position: relative;
    z-index: 10;
  }

  .post {
    position: relative;
    height: 250px;
    width: 100%;
    border-radius: 8px;
    font-family: Gilroy;
    opacity: 0;
    hyphens: auto;
    overflow: hidden;
    transition: 0.2s;
  }

  .post:hover {
    transform: scale(1.02) !important;
    transition: 0.2s;
  }

  .post:active {
    transform: scale(0.98) !important;
    transition: 0.2s;
  }

  .postmini {
    position: relative;
    height: 200px;
    width: 100%;
    background-color: var(--bg-color-secondary);
    border-radius: 16px;
    font-family: Gilroy;
    hyphens: auto;
    overflow: hidden;
    transition: 0.2s;
  }

  .post:hover {
    transform: translate(0, -10px);
    transition: 0.2s;
  }

  .postmini:hover {
    background-color: var(--bg-color-tertiary);
    transition: 0.2s;
  }

  .postmini img {
    transition: 0.2s;
  }

  .postmini:hover img {
    filter: brightness(0.8) !important;
    transition: 0.2s;
  }

  .postmini:hover {
    transform: scale(1.02);
    transition: 0.2s;
  }

  .postmini:active {
    transform: scale(0.98);
    transition: 0.2s;
  }

  .heroImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: brightness(0.7);
    z-index: 0;
    position: absolute;
    transition: 0.2s;
  }

  .post:hover .heroImage {
    transform: scale(110%);
    filter: blur(2px) brightness(0.7);
    z-index: 0;
    transition: 0.3s;
  }

  .newsHero {
    top: 30px;
    width: 100%;
    max-width: 1800px;
    height: auto;
    padding: 70px;
    left: 50%;
    transform: translateX(-50%);
    border-radius: 16px 16px 8px 8px;
    animation: fadein 0.2s linear forwards;
    overflow: hidden;
    position: relative;
    transition: 0.2s;
  }

  .newsHero:hover {
    transform: translate(-50%, 0) scale(1.01) !important;
    background-color: var(--bg-color-tertiary) !important;
    transition: 0.2s;
  }

  .newsHero:active {
    transform: translate(-50%, 0) scale(0.99) !important;
    transition: 0.2s;
  }

  @keyframes rotate {
    0% {
      rotate: 0deg;
    }
    100% {
      rotate: 360deg;
    }
  }

  a {
    z-index: 1;
    color: white;
  }

  @keyframes fadeup {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0px);
    }
  }

  @media only screen and (max-width: 1000px) {
    .postholder {
      width: 100%;
      left: 50%;
      margin-bottom: 20px;
      transform: translate(-50%, 0);
      display: flex;
      flex-direction: column;
      gap: 0px;
      position: relative;
      z-index: 10;
    }

    .post {
      margin-top: 20px;
      margin-bottom: 0;
      border-radius: 16px !important;
      height: 200px;
    }

    .herodatahold {
      flex-direction: column;
      align-items: center;
      gap: 20px;
    }

    .mobilehide {
      display: none;
    }

    .postholdermini {
      top: 0px;
      width: 100%;
      gap: 16px;
    }

    .postmini {
      height: 150px;
    }

    .newstop {
      display: none;
    }

    .newsHero {
      top: 30px;
      max-width: 1800px;
      height: auto;
      padding: 20px;
      border-radius: 16px;
      overflow: hidden;
      position: relative;
      transition: 0.2s;
    }

    .heroimg {
      height: 100%;
    }

    .post:hover {
      transform: translate(0, 0px) scale(102%);
      box-shadow: 0px 0px 0px rgb(187, 187, 187);
      transition: 0.5s;
    }
  }

  @media only screen and (min-width: 2000px) {
    .hold {
      left: 50%;
      transform: translate(-50%, 150px);
      width: 2000px;
      margin-bottom: 80px;
      position: relative;
    }

    .newstop {
      left: 60px;
      top: 130px;
      transform: translate(0, -50%);
      height: 200px;
      filter: opacity(0.1) invert(0);
      position: absolute;
    }
  }
</style>
